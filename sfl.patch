unchanged:
--- src/sflmail.c	2000-04-01 22:33:37.000000000 +0800
+++ sflmail.c	2014-04-01 16:46:29.771064835 +0800
@@ -271,7 +271,7 @@
              {
                strcpy (strUUEFile, strFile);
                if (strchr (strUUEFile, '.'))
-                   *((strchr (strUUEFile, '.')))= (char)NULL;
+                   *((strchr (strUUEFile, '.')))= 0;
                strcat (strUUEFile, ".uue");
                uuencode (strFile, strUUEFile, smtp->strlast_smtp_message);
                fpin = fopen (strUUEFile, "rb");
unchanged:
--- src/sfldate.c	2000-04-01 22:33:36.000000000 +0800
+++ sfldate.c	2014-04-01 17:00:16.454417670 +0800
@@ -906,7 +906,7 @@
 struct tm
 *safe_localtime (const time_t *time_secs)
 {
-    qbyte
+    time_t
         adjusted_time;
     struct tm
         *time_struct;
@@ -919,7 +919,7 @@
         adjust_years  += 20;
         adjusted_time -= 631152000;     /*  Number of seconds in 20 years    */
       }
-    time_struct = localtime ((const time_t *) &adjusted_time);
+    time_struct = localtime ( &adjusted_time);
     ASSERT (time_struct);               /*  MUST be valid now...             */
     time_struct-> tm_year += adjust_years;
 
@@ -937,7 +937,7 @@
 struct tm
 *safe_gmtime (const time_t *time_secs)
 {
-    qbyte
+    time_t
         adjusted_time;
     struct tm
         *time_struct;
@@ -950,7 +950,7 @@
         adjust_years  += 20;
         adjusted_time -= 631152000;     /*  Nbr seconds in 20 years          */
       }
-    time_struct = gmtime ((const time_t *) &adjusted_time);
+    time_struct = gmtime ( &adjusted_time);
     if (time_struct)                    /*  gmtime may be unimplemented      */
         time_struct-> tm_year += adjust_years;
 
unchanged:
--- src/sflhttp.c	2000-04-01 22:33:36.000000000 +0800
+++ sflhttp.c	2014-04-01 16:50:51.727737239 +0800
@@ -1957,7 +1957,7 @@
     ASSERT (strIn);
 
     trim (strFld);
-    *strRetBuf = (char) NULL;
+    *strRetBuf = 0;
     FOREVER
       {
         iLen = getstrfldlen (strIn, iCnt, 0, "&");
@@ -2015,7 +2015,7 @@
 
     ASSERT (strIn);
 
-    *strRetBuf = (char) NULL;
+    *strRetBuf = 0;
     iLen = getstrfldlen (strIn, iPos, 0, "&");
     if (iLen)
       {
unchanged:
--- src/sflstr.c	2000-04-01 22:33:38.000000000 +0800
+++ sflstr.c	2014-04-01 16:50:05.531070621 +0800
@@ -1479,7 +1479,7 @@
           offset++;
        else if (curfld != fldno)
          {
-           *retstr = (char)NULL;
+           *retstr = 0;
            break;
          }
 
@@ -1668,7 +1668,7 @@
    if (strretstr)
        return strretstr;
    else
-       return (char *)nfnd;
+       return (char *)(intptr_t)nfnd;
 }
 
 /*  ---------------------------------------------------------------------[<]-
only in patch2:
unchanged:
--- src/testxml.c	2000-04-01 22:33:40.000000000 +0800
+++ testxml.c	2014-04-01 17:22:20.604445365 +0800
@@ -14,11 +14,15 @@
                 in the file LICENSE.TXT.  This software is distributed in
                 the hope that it will be useful, but without any warranty.
  ------------------------------------------------------------------</Prolog>-*/
-
+#include <stdio.h>
 #include "sfl.h"
 
 int main (int argc, char *argv [])
 {
+	if( argc < 2) {
+	fprintf(stderr, "usage: testxml xmlfile\n");
+	return 0;
+	}
     XML_ITEM
         *root;
 
